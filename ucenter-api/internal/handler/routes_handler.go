// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1

package handler

import (
	midd "ucenter-api/internal/mid"
	"ucenter-api/internal/svc"
)

func RegisterHandlers(r *Routes, serverCtx *svc.ServiceContext) {
	// 中间件
	// 注册
	register := NewRegisterHandler(serverCtx)
	registerRouter := r.Group()
	registerRouter.Post("/uc/register/phone", register.Register)
	registerRouter.Post("/uc/mobile/code", register.SendCode)
	// 登录
	loginGroup := r.Group()
	login := NewLoginHandler(serverCtx)
	loginGroup.Post("/uc/login",login.Login)
	loginGroup.Post("/uc/check/login",login.CheckLogin)

	assetGroup := r.Group()
	assetGroup.Use(midd.Auth(serverCtx.Config.JWT.AccessSecret))
	asset := NewAssetHandler(serverCtx)
	assetGroup.Post("/uc/asset/wallet/:coinName", asset.FindWalletBySymbol)
	assetGroup.Post("/uc/asset/wallet", asset.FindWallet)
	assetGroup.Post("/uc/asset/wallet/reset-address",asset.ResetAddress)
	assetGroup.Post("/uc/asset/transaction/all",asset.FindTransaction)

	// 提现部分 - 安全认证
	approveGroup := r.Group()
	approve := NewApproveHandler(serverCtx)
	approveGroup.Use(midd.Auth(serverCtx.Config.JWT.AccessSecret))
	approveGroup.Post("/uc/approve/security/setting", approve.SecuritySetting)

	// 提现部分 - 提现
	withdrawGroup := r.Group()
	withdraw := NewWithdrawHandler(serverCtx)
	withdrawGroup.Use(midd.Auth(serverCtx.Config.JWT.AccessSecret))
	withdrawGroup.Post("/uc/withdraw/support/coin/info", withdraw.QueryWithdrawCoin)
	withdrawGroup.Post("/uc/mobile/withdraw/code",withdraw.SendCode)
	withdrawGroup.Post("/uc/withdraw/apply/code",withdraw.WithdrawCode)
	withdrawGroup.Post("/uc/withdraw/record", withdraw.Record)

}
